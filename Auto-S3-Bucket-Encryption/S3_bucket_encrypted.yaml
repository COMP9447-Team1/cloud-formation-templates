AWSTemplateFormatVersion: 2010-09-09
Resources:

  S3BucketEncryptedCheckPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Fn::GetAtt:
            - S3BucketEncryptedCheck
            - Arn
        Action: lambda:InvokeFunction
        Principal: config.amazonaws.com

  S3BucketEncryptedCheck:
    Type: 'AWS::Lambda::Function'
    Description: "Cloud formation template to enable automatic s3 bucket encryption across your account"
    Properties:
      Code:
        S3Bucket: "{{INSERT_BUCKET_NAME}}"
        S3Key: "{{INSERT_ZIPFILE_NAME}}"
      Handler: index.lambda_handler
      Runtime: python3.8
      Role:
        Fn::GetAtt: 
          - LambdaExecutionRole
          - Arn

  S3BucketEncryptedCheckConfigRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: S3BucketEncryptedCheckConfigRule
      Scope:
        ComplianceResourceTypes:
          - 'AWS::S3::Bucket'
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
          - 
            EventSource: aws.config
            MessageType: ConfigurationItemChangeNotification
        SourceIdentifier:
          Fn::GetAtt: 
            - S3BucketEncryptedCheck
            - Arn
    DependsOn: S3BucketEncryptedCheckPermission

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref BasicS3EncryptionRole
        - "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess"
  
  BasicS3EncryptionRole:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for auto s3 bucket encryption
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "VisualEditor0"
            Effect: "Allow"
            Action: logs:CreateLogGroup
            Resource: "*"
          - Sid: "VisualEditor1"
            Effect: "Allow"
            Action: 
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !Join
            - ''
            - - "arn:aws:logs:"
              - !Ref 'AWS::Region'
              - ":"
              - !Ref 'AWS::AccountId'
              - ":log-group:/aws/lambda/*"
          - Sid: "VisualEditor2"
            Effect: "Allow"
            Action: 
            - s3:PutEncryptionConfiguration
            - s3:GetEncryptionConfiguration
            Resource: "*"